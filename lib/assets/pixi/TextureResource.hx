package assets.pixi;

import js.Browser;
import js.html.Event;
import js.html.Image;
import js.html.RequestInit;
import js.lib.Error;
import pixi.textures.BaseTexture;
import pixi.textures.Texture;
import pixi.utils.Spritesheet;

/**
 * –û–±—ã—á–Ω—ã–µ, —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ.  
 * –û–±—ä–µ–∫—Ç –∑–∞–Ω–∏–º–∞–µ—Ç—Å—è –∑–∞–≥—Ä—É–∑–∫–æ–π –∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º —Ç–µ–∫—Å—Ç—É—Ä –¥–ª—è [PixiJS](https://pixijs.download/dev/docs/index.html).
 */
class TextureResource extends Resource<TextureResource, TextureParams>
{
    private var img:Image = null;
    private var map:Dynamic = null;
    private var isImgReady:Bool = false;
    private var isMapReady:Bool = false;
    private var base:BaseTexture = null;

    /**
     * –°–æ–∑–¥–∞—Ç—å –∑–∞–≥—Ä—É–∑—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö.
     * @param manager –†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –º–µ–Ω–µ–¥–∂–µ—Ä –∑–∞–≥—Ä—É–∑—á–∏–∫–∞.
     * @param params –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ—Å—É—Ä—Å–∞.
     */
    private function new(manager:TexturesManager, params:TextureParams) {
        super(manager, params.id==null?params.url:params.id, ResourceType.TEXTURE, params);

        if (params.url == null)
            throw new Error("The url of texture cannot be null");

        this.url = params.url;
        this.sprites = params.sprites==null?null:params.sprites;
        this.fetchParams = params.fetchParams==null?null:params.fetchParams;
    }

    /**
     * URL –ê–¥—Ä–µ—Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è.  
     * –ù–µ –º–æ–∂–µ—Ç –±—ã—Ç—å `null`
     */
    public var url(default, null):String;

    /**
     * URL –ê–¥—Ä–µ—Å —Ñ–∞–π–ª–∞ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º —Ç–µ–∫—Å—Ç—É—Ä. (–ê—Ç–ª–∞—Å)  
     * –ï—Å–ª–∏ –Ω–µ –∑–∞–¥–∞–Ω–æ, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –±—É–¥–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–æ –∫–∞–∫ –µ–¥–∏–Ω–∏—á–Ω–∞—è —Ç–µ–∫—Å—Ç—É—Ä–∞.  
     * –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é: `null`
     */
    public var sprites(default, null):String;

    /**
     * –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è [fetch()](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch)
     * –∑–∞–ø—Ä–æ—Å–∞.  
     * –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é: `null`
     */
    public var fetchParams(default, null):RequestInit;

    /**
     * –ù–∞—á–∞—Ç—å –∑–∞–≥—Ä—É–∑–∫—É.  
     */
    override private function load():Void {
        if (isLoading || isComplete || isDisposed)
            return;

        isLoading = true;

        // –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ–∫—Å—Ç—É—Ä—ã:
        img = new Image();
        img.addEventListener("load", function(e:Event) {
            if (isDisposed || isComplete)
                return;

            isImgReady = true;
            checkComplete();
        });
        img.addEventListener("error", function(e:Event) {
            if (isDisposed || isComplete)
                return;

            error = new Error('Failed to load texture source: "' + url + '"');
            isLoading = false;
            isComplete = true;
            onComplete.emit(this);
        });
        img.src = url;

        // –ó–∞–≥—Ä—É–∑–∫–∞ –º–∞–ø—ã —Å–ø—Ä–∞–π—Ç–æ–≤:
        if (sprites != null) {
            Browser.window.fetch(sprites, fetchParams).then(
                function(response) {
                    if (isDisposed || isComplete)
                        return;

                    if (response.ok) {
                        response.json().then(
                            function(data) {
                                if (isDisposed || isComplete)
                                    return;

                                map = data;
                                isMapReady = true;
                                checkComplete();
                            },
                            function(err) {
                                if (isDisposed || isComplete)
                                    return;

                                error = new Error('Failed to parse texture sprites data: "' + sprites + '"\n' + Std.string(err));
                                isComplete = true;
                                isLoading = false;
                                onComplete.emit(this);
                            }
                        );
                    }
                    else {
                        error = new Error('Failed to load texture sprites data: ' + response.status + ' ' + response.statusText + ' "' + sprites + '"');
                        isComplete = true;
                        isLoading = false;
                        onComplete.emit(this);
                    }
                },
                function(err) {
                    if (isDisposed || isComplete)
                        return;

                    error = err;
                    isComplete = true;
                    isLoading = false;
                    onComplete.emit(this);
                }
            );
        }
    }

    private function checkComplete():Void {
        if (sprites == null) {
            if (!isImgReady)
                return;

            // –û–¥–∏–Ω–æ—á–Ω–∞—è —Ç–µ–∫—Å—Ç—É—Ä–∞:
            base = new BaseTexture(img);
            BaseTexture.addToCache(base, id);

            var t = new Texture(base);
            Texture.addToCache(t, id);

            isComplete = true;
            isLoading = false;
            onComplete.emit(this);
        }
        else {
            if (!isImgReady || !isMapReady)
                return;

            // –ê—Ç–ª–∞—Å:
            base = new BaseTexture(img);
            BaseTexture.addToCache(base, id);

            var ss = new Spritesheet(base, map);
            ss.parse(function(data){
                isComplete = true;
                isLoading = false;
                onComplete.emit(this);
            });
        }
    }

    /**
     * –£–Ω–∏—á—Ç–æ–∂–∏—Ç—å —ç—Ç—É —Ç–µ–∫—Å—Ç—É—Ä—É. üî•  
     * –í—ã–∑–æ–≤ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç—Å—è, –µ—Å–ª–∏ —ç—Ç–æ—Ç —Ä–µ—Å—É—Ä—Å —É–∂–µ –±—ã–ª –≤—ã–≥—Ä—É–∂–µ–Ω.
     * - –£–¥–∞–ª—è–µ—Ç –≤—Å–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å —ç—Ç–æ–π —Ç–µ–∫—Å—Ç—É—Ä–æ–π.
     * - –û—á–∏—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Å–ª—É—à–∞—Ç–µ–ª–µ–π `onComplete=null`.
     * - –£–¥–∞–ª—è–µ—Ç –æ–±—ä–µ–∫—Ç –∏–∑ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ `manager=null`.
     * - –£–¥–∞–ª—è–µ—Ç –æ—à–∏–±–∫—É `error=null`.
     * - –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–≤–æ–π—Å—Ç–≤–æ `isDisposed=true`.
     * 
     * –í—ã –±–æ–ª—å—à–µ –Ω–µ –¥–æ–ª–∂–Ω—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–æ—Ç –æ–±—ä–µ–∫—Ç!
     */
    override public function dispose():Void {
        if (isDisposed)
            return;

        if (base != null) {
            base.destroy();
            base.dispose();
            base = null;
        }

        img = null;
        map = null;

        super.dispose();
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å —Å—Ç—Ä–æ–∫–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —ç—Ç–æ–≥–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞.
     * @return –°—Ç—Ä–æ–∫–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞.
     */
    @:keep
    override public function toString():String {
        return "[TextureResource id=" + id + "]";
    }
}

/**
 * –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–≥—Ä—É–∂–∞–µ–º–æ–π —Ç–µ–∫—Å—Ç—É—Ä—ã.
 */
typedef TextureParams =
{
    /**
     * ID –†–µ—Å—É—Ä—Å–∞.  
     * –ï—Å–ª–∏ –Ω–µ –∑–∞–¥–∞–Ω, –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ **url**.
     */
    @:optional var id:String;

    /**
     * URL –ê–¥—Ä–µ—Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è.  
     * –ù–µ –º–æ–∂–µ—Ç –±—ã—Ç—å `null`
     */
    var url:String;

    /**
     * URL –ê–¥—Ä–µ—Å —Ñ–∞–π–ª–∞ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º —Ç–µ–∫—Å—Ç—É—Ä. (–ê—Ç–ª–∞—Å)  
     * –ï—Å–ª–∏ –Ω–µ –∑–∞–¥–∞–Ω–æ, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –±—É–¥–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–æ –∫–∞–∫ –µ–¥–∏–Ω–∏—á–Ω–∞—è —Ç–µ–∫—Å—Ç—É—Ä–∞.  
     * –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é: `null`
     */
    @:optional var sprites:String;

    /**
     * –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è [fetch()](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch)
     * –∑–∞–ø—Ä–æ—Å–∞.  
     * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö —Å–ø—Ä–∞–π—Ç–æ–≤, –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω `sprites`.
     * 
     * –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é: `null`
     */
    @:optional var fetchParams:RequestInit;
}