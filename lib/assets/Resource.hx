package assets;

import js.html.XMLHttpRequest;

/**
 * Ресурс.
 * Это обёртка, которая содержит загружаемый ресурс и его **параметры**.
 */
typedef Resource =
{
    /**
     * URL Адрес ресурса.
     * 
     * Не может быть `null`
     */
    var url(default, null):String;

    /**
     * Тип данных.
     * 
     * По умолчанию: `ResourceType.TEXT`
     */
    var type(default, null):ResourceType;

    /**
     * Загруженные данные.
     * - Смотрите свойство `type` для получения информации о типе загруженных данных.
     * - Данные становятся доступны только после полной загрузки ресурса.
     * - Если тип данных указан некорректно, свойство `data` будет равно `null`. (Например,
     * если указан тип `ResourceType.JSON` для картинки)
     * 
     * По умолчанию: `null`
     */
    var data(default, null):Dynamic;

    /**
     * Ошибка.
     * Содержит ошибку, если такова имела место быть при выполнении загрузки ресурса.
     * 
     * По умолчанию: `null`
     */
    var error(default, null):Dynamic;
    
    /**
     * Ресурс загружен.
     * 
     * Это свойство равно `true`, когда загрузка этого ресурса завершена.
     * Это может произойти:
     * - При успешном завершении загрузки, тогда вы можете получить данные в свойстве: `data`.
     * - В случае отмены загрузки. Поле `data` будет равно `null`.
     * - В случае ошибки. Поле `error` будет содержать объект описания ошибки.
     * 
     * Перед доступом к данным проверьте тип содержимого в свойстве: `type`.
     * 
     * По умолчанию: `false`
     */
    var loaded(default, null):Bool;

    /**
     * Объём данных. (Байт)
     * 
     * Это значение может меняться по мере загрузки ресурса.
     * 
     * По умолчанию: `0`
     */
    var bytesTotal(default, null):Int;

    /**
     * Объём загруженных данных. (Байт)
     * 
     * Это значение меняется по мере загрузки ресурса.
     * 
     * По умолчанию: `0`
     */
    var bytesLoaded(default, null):Int;

    /**
     * Объект `XMLHttpRequest`.
     * 
     * Используется внутренней реализацией, вы не должны использовать это свойство
     * или как либо строить поверх него свой код.
     */
    //@:noCompletion
    var xhr:XMLHttpRequest;
}